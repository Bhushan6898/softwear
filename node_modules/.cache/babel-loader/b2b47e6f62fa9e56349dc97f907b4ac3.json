{"ast":null,"code":"import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\n\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\n\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\n\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\n\nconst getAsArray = data => Array.isArray(data) ? data : [data];\n\nconst mergeProps = (source, target) => {\n  const newTarget = { ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\n\nexport const nodesToString = (children, i18nOptions) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n};\n\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = { ...data,\n    ...combinedTOpts\n  };\n\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = { ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, { ...props,\n          key: i,\n          ref: c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n\n      return mem;\n    }, []);\n  };\n\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\n\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n\n  const reactI18nextOptions = { ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? { ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : { ...i18n.options.interpolation.defaultVariables\n    };\n  }\n\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: { ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = { ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n\n  if (components) {\n    Object.keys(components).forEach(c => {\n      const comp = components[c];\n      if (typeof comp.type === 'function' || !comp.props || !comp.props.children || translation.indexOf(`${c}/>`) < 0 && translation.indexOf(`${c} />`) < 0) return;\n\n      function Componentized() {\n        return createElement(Fragment, null, comp);\n      }\n\n      components[c] = createElement(Componentized);\n    });\n  }\n\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","map":{"version":3,"names":["Fragment","isValidElement","cloneElement","createElement","Children","HTML","isObject","isString","warn","warnOnce","getDefaults","getI18n","hasChildren","node","checkLength","base","props","children","length","getChildren","i18nIsDynamicList","getAsArray","hasValidReactChildren","Array","isArray","every","data","mergeProps","source","target","newTarget","Object","assign","nodesToString","i18nOptions","stringNode","childrenArray","keepArray","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","forEach","child","childIndex","type","childPropsCount","keys","shouldKeepChild","indexOf","childChildren","content","format","clone","value","renderNodes","targetString","i18n","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","RegExp","map","keep","join","test","getData","childs","ast","parse","opts","renderInner","rootReactNode","mappedChildren","mapAST","pushTranslatedJSX","inner","mem","i","isVoid","dummy","push","key","undefined","c","ref","reactNode","astNode","reactNodes","astNodes","reduce","translationContent","services","interpolator","interpolate","language","tmp","parseInt","name","attrs","isElement","isValidTranslationWithChildren","voidElement","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","call","Number","isNaN","parseFloat","wrapTextNodes","transWrapTextNodes","unescape","result","Trans","count","parent","i18nKey","context","tOptions","values","defaults","components","ns","i18nFromProps","t","tFromProps","additionalProps","bind","k","reactI18nextOptions","options","react","namespaces","defaultNS","nodeAsString","defaultValue","transEmptyNodeValue","hashTransKey","interpolation","defaultVariables","interpolationOverride","alwaysFormat","prefix","suffix","translation","comp","Componentized","useAsParent","defaultTransParent"],"sources":["D:/mahaluxmi_hardwere_softwere/Mahaluxmi_client/node_modules/react-i18next/dist/es/TransWithoutContext.js"],"sourcesContent":["import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n};\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, {\n          ...props,\n          key: i,\n          ref: c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nexport function Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  if (components) {\n    Object.keys(components).forEach(c => {\n      const comp = components[c];\n      if (typeof comp.type === 'function' || !comp.props || !comp.props.children || translation.indexOf(`${c}/>`) < 0 && translation.indexOf(`${c} />`) < 0) return;\n      function Componentized() {\n        return createElement(Fragment, null, comp);\n      }\n      components[c] = createElement(Componentized);\n    });\n  }\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}